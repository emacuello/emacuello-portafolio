---
import type { Proyect } from '../utils/interfaces.ts';
interface Props {
	aboutProyect: Proyect;
}
const { aboutProyect } = Astro.props;
---

<div class="flex items-center justify-center min-h-screen px-24">
	<div>
		<div class="group relative -ml-4 flex scroll-mt-40 items-center pl-4">
			<a
				href="/#skills"
				class="absolute z-50 -ml-10 mb-2.5 rounded-md border border-blue-gray-50 bg-blue-gray-50/50 p-1 opacity-0 hover:opacity-100 group-hover:opacity-100"
			>
				<svg
					xmlns="http://www.w3.org/2000/svg"
					fill="none"
					viewBox="0 0 24 24"
					stroke-width="2.5"
					stroke="currentColor"
					aria-hidden="true"
					class="pointer-events-none h-3.5 w-3.5 rounded-lg"
				>
					<path
						stroke-linecap="round"
						stroke-linejoin="round"
						d="M5.25 8.25h15m-16.5 7.5h15m-1.8-13.5l-3.9 19.5m-2.1-19.5l-3.9 19.5"
					></path>
				</svg>
			</a>
			<h2
				class="block antialiased tracking-normal font-sans text-2xl font-semibold leading-snug !mb-2 text-primary"
			>
				Frameworks Integrados en {aboutProyect.title}
			</h2>
		</div>
		<p
			class="block antialiased font-sans text-base leading-relaxed text-inherit !mb-4 !font-normal !text-gray-600"
		>
			Estás son algunas de las erramientas que implementé en el proyecto
			de {aboutProyect.title}
		</p>
		<div
			class="mt-8 grid grid-cols-1 gap-6 sm:grid-cols-4"
			id="frameworks-integration"
		>
			{
				aboutProyect.skills.map((skill) => (
					<a class="grid w-full min-w-[7rem] transform cursor-pointer place-items-center rounded-xl  bg-blue-gray-50/50 px-3 py-2 transition-all hover:scale-105 hover:border-blue-gray-100 hover:bg-blue-gray-50 hover:bg-opacity-25">
						<span class="my-6 grid h-24 w-24 place-items-center">
							<img src={skill.img?.url} alt={skill.img?.alt} />
						</span>
					</a>
				))
			}
		</div>
	</div>
</div>
